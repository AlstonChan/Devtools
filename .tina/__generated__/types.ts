//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  authentication: Authentication;
  authenticationConnection: AuthenticationConnection;
  deployment: Deployment;
  deploymentConnection: DeploymentConnection;
  databases: Databases;
  databasesConnection: DatabasesConnection;
  baas: Baas;
  baasConnection: BaasConnection;
  cloudProviders: CloudProviders;
  cloudProvidersConnection: CloudProvidersConnection;
  frameworks: Frameworks;
  frameworksConnection: FrameworksConnection;
  security: Security;
  securityConnection: SecurityConnection;
  storage: Storage;
  storageConnection: StorageConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthenticationArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthenticationConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthenticationFilter>;
};


export type QueryDeploymentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDeploymentConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DeploymentFilter>;
};


export type QueryDatabasesArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDatabasesConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DatabasesFilter>;
};


export type QueryBaasArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryBaasConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<BaasFilter>;
};


export type QueryCloudProvidersArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryCloudProvidersConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<CloudProvidersFilter>;
};


export type QueryFrameworksArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryFrameworksConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<FrameworksFilter>;
};


export type QuerySecurityArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QuerySecurityConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SecurityFilter>;
};


export type QueryStorageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryStorageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<StorageFilter>;
};

export type DocumentFilter = {
  authentication?: InputMaybe<AuthenticationFilter>;
  deployment?: InputMaybe<DeploymentFilter>;
  databases?: InputMaybe<DatabasesFilter>;
  baas?: InputMaybe<BaasFilter>;
  cloudProviders?: InputMaybe<CloudProvidersFilter>;
  frameworks?: InputMaybe<FrameworksFilter>;
  security?: InputMaybe<SecurityFilter>;
  storage?: InputMaybe<StorageFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Authentication | Deployment | Databases | Baas | CloudProviders | Frameworks | Security | Storage;

export type AuthenticationAddOnThumbnail = {
  __typename?: 'AuthenticationAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type AuthenticationGithubInfo = {
  __typename?: 'AuthenticationGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type AuthenticationComparisonInfo = {
  __typename?: 'AuthenticationComparisonInfo';
  monthlyActiveUsers?: Maybe<Scalars['String']>;
  emailAndPasswordAuth?: Maybe<Scalars['Boolean']>;
  magicLinks?: Maybe<Scalars['Boolean']>;
  socialLogins?: Maybe<Scalars['String']>;
  phoneNumberAuth?: Maybe<Scalars['String']>;
  anonymousAuthentication?: Maybe<Scalars['Boolean']>;
  multiFactorAuthentication?: Maybe<Scalars['Boolean']>;
  userInterfaceProvided?: Maybe<Scalars['Boolean']>;
  customDomain?: Maybe<Scalars['Boolean']>;
  noBrandWatermark?: Maybe<Scalars['Boolean']>;
};

export type Authentication = Node & Document & {
  __typename?: 'Authentication';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<AuthenticationAddOnThumbnail>;
  githubInfo?: Maybe<AuthenticationGithubInfo>;
  comparisonInfo?: Maybe<AuthenticationComparisonInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type AuthenticationAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type AuthenticationGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type AuthenticationComparisonInfoFilter = {
  monthlyActiveUsers?: InputMaybe<StringFilter>;
  emailAndPasswordAuth?: InputMaybe<BooleanFilter>;
  magicLinks?: InputMaybe<BooleanFilter>;
  socialLogins?: InputMaybe<StringFilter>;
  phoneNumberAuth?: InputMaybe<StringFilter>;
  anonymousAuthentication?: InputMaybe<BooleanFilter>;
  multiFactorAuthentication?: InputMaybe<BooleanFilter>;
  userInterfaceProvided?: InputMaybe<BooleanFilter>;
  customDomain?: InputMaybe<BooleanFilter>;
  noBrandWatermark?: InputMaybe<BooleanFilter>;
};

export type AuthenticationFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<AuthenticationAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<AuthenticationGithubInfoFilter>;
  comparisonInfo?: InputMaybe<AuthenticationComparisonInfoFilter>;
};

export type AuthenticationConnectionEdges = {
  __typename?: 'AuthenticationConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Authentication>;
};

export type AuthenticationConnection = Connection & {
  __typename?: 'AuthenticationConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AuthenticationConnectionEdges>>>;
};

export type DeploymentAddOnThumbnail = {
  __typename?: 'DeploymentAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type DeploymentGithubInfo = {
  __typename?: 'DeploymentGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type DeploymentComparisonInfo = {
  __typename?: 'DeploymentComparisonInfo';
  siteLimit?: Maybe<Scalars['String']>;
  freeBandwidth?: Maybe<Scalars['String']>;
  additionalBandwidthCost?: Maybe<Scalars['String']>;
  freeBuildMinutes?: Maybe<Scalars['String']>;
  concurrentBuilds?: Maybe<Scalars['String']>;
  deploymentPreview?: Maybe<Scalars['Boolean']>;
  serverlessFunctionExecution?: Maybe<Scalars['String']>;
  serverlessFunctionInvocations?: Maybe<Scalars['String']>;
  serverlessFunctionExecutionTimeout?: Maybe<Scalars['String']>;
  edgeFunctionExecution?: Maybe<Scalars['String']>;
  globalCdn?: Maybe<Scalars['Boolean']>;
  customHeaders?: Maybe<Scalars['Boolean']>;
  https?: Maybe<Scalars['Boolean']>;
  ddosProtection?: Maybe<Scalars['Boolean']>;
};

export type Deployment = Node & Document & {
  __typename?: 'Deployment';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<DeploymentAddOnThumbnail>;
  githubInfo?: Maybe<DeploymentGithubInfo>;
  comparisonInfo?: Maybe<DeploymentComparisonInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DeploymentAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type DeploymentGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type DeploymentComparisonInfoFilter = {
  siteLimit?: InputMaybe<StringFilter>;
  freeBandwidth?: InputMaybe<StringFilter>;
  additionalBandwidthCost?: InputMaybe<StringFilter>;
  freeBuildMinutes?: InputMaybe<StringFilter>;
  concurrentBuilds?: InputMaybe<StringFilter>;
  deploymentPreview?: InputMaybe<BooleanFilter>;
  serverlessFunctionExecution?: InputMaybe<StringFilter>;
  serverlessFunctionInvocations?: InputMaybe<StringFilter>;
  serverlessFunctionExecutionTimeout?: InputMaybe<StringFilter>;
  edgeFunctionExecution?: InputMaybe<StringFilter>;
  globalCdn?: InputMaybe<BooleanFilter>;
  customHeaders?: InputMaybe<BooleanFilter>;
  https?: InputMaybe<BooleanFilter>;
  ddosProtection?: InputMaybe<BooleanFilter>;
};

export type DeploymentFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<DeploymentAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<DeploymentGithubInfoFilter>;
  comparisonInfo?: InputMaybe<DeploymentComparisonInfoFilter>;
};

export type DeploymentConnectionEdges = {
  __typename?: 'DeploymentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Deployment>;
};

export type DeploymentConnection = Connection & {
  __typename?: 'DeploymentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DeploymentConnectionEdges>>>;
};

export type DatabasesAddOnThumbnail = {
  __typename?: 'DatabasesAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type DatabasesGithubInfo = {
  __typename?: 'DatabasesGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type Databases = Node & Document & {
  __typename?: 'Databases';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<DatabasesAddOnThumbnail>;
  githubInfo?: Maybe<DatabasesGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DatabasesAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type DatabasesGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type DatabasesFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<DatabasesAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<DatabasesGithubInfoFilter>;
};

export type DatabasesConnectionEdges = {
  __typename?: 'DatabasesConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Databases>;
};

export type DatabasesConnection = Connection & {
  __typename?: 'DatabasesConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DatabasesConnectionEdges>>>;
};

export type BaasAddOnThumbnail = {
  __typename?: 'BaasAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type BaasGithubInfo = {
  __typename?: 'BaasGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type Baas = Node & Document & {
  __typename?: 'Baas';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<BaasAddOnThumbnail>;
  githubInfo?: Maybe<BaasGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type BaasAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type BaasGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type BaasFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<BaasAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<BaasGithubInfoFilter>;
};

export type BaasConnectionEdges = {
  __typename?: 'BaasConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Baas>;
};

export type BaasConnection = Connection & {
  __typename?: 'BaasConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<BaasConnectionEdges>>>;
};

export type CloudProvidersAddOnThumbnail = {
  __typename?: 'CloudProvidersAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type CloudProvidersGithubInfo = {
  __typename?: 'CloudProvidersGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type CloudProviders = Node & Document & {
  __typename?: 'CloudProviders';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<CloudProvidersAddOnThumbnail>;
  githubInfo?: Maybe<CloudProvidersGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type CloudProvidersAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type CloudProvidersGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type CloudProvidersFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<CloudProvidersAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<CloudProvidersGithubInfoFilter>;
};

export type CloudProvidersConnectionEdges = {
  __typename?: 'CloudProvidersConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<CloudProviders>;
};

export type CloudProvidersConnection = Connection & {
  __typename?: 'CloudProvidersConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<CloudProvidersConnectionEdges>>>;
};

export type FrameworksAddOnThumbnail = {
  __typename?: 'FrameworksAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type FrameworksGithubInfo = {
  __typename?: 'FrameworksGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type Frameworks = Node & Document & {
  __typename?: 'Frameworks';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<FrameworksAddOnThumbnail>;
  githubInfo?: Maybe<FrameworksGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type FrameworksAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type FrameworksGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type FrameworksFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<FrameworksAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<FrameworksGithubInfoFilter>;
};

export type FrameworksConnectionEdges = {
  __typename?: 'FrameworksConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Frameworks>;
};

export type FrameworksConnection = Connection & {
  __typename?: 'FrameworksConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<FrameworksConnectionEdges>>>;
};

export type SecurityAddOnThumbnail = {
  __typename?: 'SecurityAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type SecurityGithubInfo = {
  __typename?: 'SecurityGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type Security = Node & Document & {
  __typename?: 'Security';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<SecurityAddOnThumbnail>;
  githubInfo?: Maybe<SecurityGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type SecurityAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type SecurityGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type SecurityFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<SecurityAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<SecurityGithubInfoFilter>;
};

export type SecurityConnectionEdges = {
  __typename?: 'SecurityConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Security>;
};

export type SecurityConnection = Connection & {
  __typename?: 'SecurityConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<SecurityConnectionEdges>>>;
};

export type StorageAddOnThumbnail = {
  __typename?: 'StorageAddOnThumbnail';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
};

export type StorageGithubInfo = {
  __typename?: 'StorageGithubInfo';
  githubLink?: Maybe<Scalars['String']>;
  githubStars?: Maybe<Scalars['String']>;
};

export type Storage = Node & Document & {
  __typename?: 'Storage';
  title: Scalars['String'];
  description: Scalars['String'];
  descriptionOfFreePlan?: Maybe<Scalars['String']>;
  siteLink: Scalars['String'];
  pricingPage?: Maybe<Scalars['String']>;
  thumbnail: Scalars['String'];
  addOnThumbnail?: Maybe<StorageAddOnThumbnail>;
  githubInfo?: Maybe<StorageGithubInfo>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StorageAddOnThumbnailFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type StorageGithubInfoFilter = {
  githubLink?: InputMaybe<StringFilter>;
  githubStars?: InputMaybe<StringFilter>;
};

export type StorageFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  descriptionOfFreePlan?: InputMaybe<StringFilter>;
  siteLink?: InputMaybe<StringFilter>;
  pricingPage?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<ImageFilter>;
  addOnThumbnail?: InputMaybe<StorageAddOnThumbnailFilter>;
  githubInfo?: InputMaybe<StorageGithubInfoFilter>;
};

export type StorageConnectionEdges = {
  __typename?: 'StorageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Storage>;
};

export type StorageConnection = Connection & {
  __typename?: 'StorageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<StorageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateAuthentication: Authentication;
  createAuthentication: Authentication;
  updateDeployment: Deployment;
  createDeployment: Deployment;
  updateDatabases: Databases;
  createDatabases: Databases;
  updateBaas: Baas;
  createBaas: Baas;
  updateCloudProviders: CloudProviders;
  createCloudProviders: CloudProviders;
  updateFrameworks: Frameworks;
  createFrameworks: Frameworks;
  updateSecurity: Security;
  createSecurity: Security;
  updateStorage: Storage;
  createStorage: Storage;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateAuthenticationArgs = {
  relativePath: Scalars['String'];
  params: AuthenticationMutation;
};


export type MutationCreateAuthenticationArgs = {
  relativePath: Scalars['String'];
  params: AuthenticationMutation;
};


export type MutationUpdateDeploymentArgs = {
  relativePath: Scalars['String'];
  params: DeploymentMutation;
};


export type MutationCreateDeploymentArgs = {
  relativePath: Scalars['String'];
  params: DeploymentMutation;
};


export type MutationUpdateDatabasesArgs = {
  relativePath: Scalars['String'];
  params: DatabasesMutation;
};


export type MutationCreateDatabasesArgs = {
  relativePath: Scalars['String'];
  params: DatabasesMutation;
};


export type MutationUpdateBaasArgs = {
  relativePath: Scalars['String'];
  params: BaasMutation;
};


export type MutationCreateBaasArgs = {
  relativePath: Scalars['String'];
  params: BaasMutation;
};


export type MutationUpdateCloudProvidersArgs = {
  relativePath: Scalars['String'];
  params: CloudProvidersMutation;
};


export type MutationCreateCloudProvidersArgs = {
  relativePath: Scalars['String'];
  params: CloudProvidersMutation;
};


export type MutationUpdateFrameworksArgs = {
  relativePath: Scalars['String'];
  params: FrameworksMutation;
};


export type MutationCreateFrameworksArgs = {
  relativePath: Scalars['String'];
  params: FrameworksMutation;
};


export type MutationUpdateSecurityArgs = {
  relativePath: Scalars['String'];
  params: SecurityMutation;
};


export type MutationCreateSecurityArgs = {
  relativePath: Scalars['String'];
  params: SecurityMutation;
};


export type MutationUpdateStorageArgs = {
  relativePath: Scalars['String'];
  params: StorageMutation;
};


export type MutationCreateStorageArgs = {
  relativePath: Scalars['String'];
  params: StorageMutation;
};

export type DocumentUpdateMutation = {
  authentication?: InputMaybe<AuthenticationMutation>;
  deployment?: InputMaybe<DeploymentMutation>;
  databases?: InputMaybe<DatabasesMutation>;
  baas?: InputMaybe<BaasMutation>;
  cloudProviders?: InputMaybe<CloudProvidersMutation>;
  frameworks?: InputMaybe<FrameworksMutation>;
  security?: InputMaybe<SecurityMutation>;
  storage?: InputMaybe<StorageMutation>;
  relativePath?: InputMaybe<Scalars['String']>;
};

export type DocumentMutation = {
  authentication?: InputMaybe<AuthenticationMutation>;
  deployment?: InputMaybe<DeploymentMutation>;
  databases?: InputMaybe<DatabasesMutation>;
  baas?: InputMaybe<BaasMutation>;
  cloudProviders?: InputMaybe<CloudProvidersMutation>;
  frameworks?: InputMaybe<FrameworksMutation>;
  security?: InputMaybe<SecurityMutation>;
  storage?: InputMaybe<StorageMutation>;
};

export type AuthenticationAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type AuthenticationGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type AuthenticationComparisonInfoMutation = {
  monthlyActiveUsers?: InputMaybe<Scalars['String']>;
  emailAndPasswordAuth?: InputMaybe<Scalars['Boolean']>;
  magicLinks?: InputMaybe<Scalars['Boolean']>;
  socialLogins?: InputMaybe<Scalars['String']>;
  phoneNumberAuth?: InputMaybe<Scalars['String']>;
  anonymousAuthentication?: InputMaybe<Scalars['Boolean']>;
  multiFactorAuthentication?: InputMaybe<Scalars['Boolean']>;
  userInterfaceProvided?: InputMaybe<Scalars['Boolean']>;
  customDomain?: InputMaybe<Scalars['Boolean']>;
  noBrandWatermark?: InputMaybe<Scalars['Boolean']>;
};

export type AuthenticationMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<AuthenticationAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<AuthenticationGithubInfoMutation>;
  comparisonInfo?: InputMaybe<AuthenticationComparisonInfoMutation>;
};

export type DeploymentAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type DeploymentGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type DeploymentComparisonInfoMutation = {
  siteLimit?: InputMaybe<Scalars['String']>;
  freeBandwidth?: InputMaybe<Scalars['String']>;
  additionalBandwidthCost?: InputMaybe<Scalars['String']>;
  freeBuildMinutes?: InputMaybe<Scalars['String']>;
  concurrentBuilds?: InputMaybe<Scalars['String']>;
  deploymentPreview?: InputMaybe<Scalars['Boolean']>;
  serverlessFunctionExecution?: InputMaybe<Scalars['String']>;
  serverlessFunctionInvocations?: InputMaybe<Scalars['String']>;
  serverlessFunctionExecutionTimeout?: InputMaybe<Scalars['String']>;
  edgeFunctionExecution?: InputMaybe<Scalars['String']>;
  globalCdn?: InputMaybe<Scalars['Boolean']>;
  customHeaders?: InputMaybe<Scalars['Boolean']>;
  https?: InputMaybe<Scalars['Boolean']>;
  ddosProtection?: InputMaybe<Scalars['Boolean']>;
};

export type DeploymentMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<DeploymentAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<DeploymentGithubInfoMutation>;
  comparisonInfo?: InputMaybe<DeploymentComparisonInfoMutation>;
};

export type DatabasesAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type DatabasesGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type DatabasesMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<DatabasesAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<DatabasesGithubInfoMutation>;
};

export type BaasAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type BaasGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type BaasMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<BaasAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<BaasGithubInfoMutation>;
};

export type CloudProvidersAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type CloudProvidersGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type CloudProvidersMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<CloudProvidersAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<CloudProvidersGithubInfoMutation>;
};

export type FrameworksAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type FrameworksGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type FrameworksMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<FrameworksAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<FrameworksGithubInfoMutation>;
};

export type SecurityAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type SecurityGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type SecurityMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<SecurityAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<SecurityGithubInfoMutation>;
};

export type StorageAddOnThumbnailMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
};

export type StorageGithubInfoMutation = {
  githubLink?: InputMaybe<Scalars['String']>;
  githubStars?: InputMaybe<Scalars['String']>;
};

export type StorageMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  descriptionOfFreePlan?: InputMaybe<Scalars['String']>;
  siteLink?: InputMaybe<Scalars['String']>;
  pricingPage?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  addOnThumbnail?: InputMaybe<StorageAddOnThumbnailMutation>;
  githubInfo?: InputMaybe<StorageGithubInfoMutation>;
};

export type AuthenticationPartsFragment = { __typename?: 'Authentication', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'AuthenticationAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'AuthenticationGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'AuthenticationComparisonInfo', monthlyActiveUsers?: string | null, emailAndPasswordAuth?: boolean | null, magicLinks?: boolean | null, socialLogins?: string | null, phoneNumberAuth?: string | null, anonymousAuthentication?: boolean | null, multiFactorAuthentication?: boolean | null, userInterfaceProvided?: boolean | null, customDomain?: boolean | null, noBrandWatermark?: boolean | null } | null };

export type DeploymentPartsFragment = { __typename?: 'Deployment', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'DeploymentAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DeploymentGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'DeploymentComparisonInfo', siteLimit?: string | null, freeBandwidth?: string | null, additionalBandwidthCost?: string | null, freeBuildMinutes?: string | null, concurrentBuilds?: string | null, deploymentPreview?: boolean | null, serverlessFunctionExecution?: string | null, serverlessFunctionInvocations?: string | null, serverlessFunctionExecutionTimeout?: string | null, edgeFunctionExecution?: string | null, globalCdn?: boolean | null, customHeaders?: boolean | null, https?: boolean | null, ddosProtection?: boolean | null } | null };

export type DatabasesPartsFragment = { __typename?: 'Databases', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'DatabasesAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DatabasesGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type BaasPartsFragment = { __typename?: 'Baas', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'BaasAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'BaasGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type CloudProvidersPartsFragment = { __typename?: 'CloudProviders', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'CloudProvidersAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'CloudProvidersGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type FrameworksPartsFragment = { __typename?: 'Frameworks', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'FrameworksAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'FrameworksGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type SecurityPartsFragment = { __typename?: 'Security', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'SecurityAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'SecurityGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type StoragePartsFragment = { __typename?: 'Storage', title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, addOnThumbnail?: { __typename: 'StorageAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'StorageGithubInfo', githubLink?: string | null, githubStars?: string | null } | null };

export type AuthenticationQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AuthenticationQuery = { __typename?: 'Query', authentication: { __typename?: 'Authentication', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'AuthenticationAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'AuthenticationGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'AuthenticationComparisonInfo', monthlyActiveUsers?: string | null, emailAndPasswordAuth?: boolean | null, magicLinks?: boolean | null, socialLogins?: string | null, phoneNumberAuth?: string | null, anonymousAuthentication?: boolean | null, multiFactorAuthentication?: boolean | null, userInterfaceProvided?: boolean | null, customDomain?: boolean | null, noBrandWatermark?: boolean | null } | null } };

export type AuthenticationConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthenticationFilter>;
}>;


export type AuthenticationConnectionQuery = { __typename?: 'Query', authenticationConnection: { __typename?: 'AuthenticationConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AuthenticationConnectionEdges', cursor: string, node?: { __typename?: 'Authentication', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'AuthenticationAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'AuthenticationGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'AuthenticationComparisonInfo', monthlyActiveUsers?: string | null, emailAndPasswordAuth?: boolean | null, magicLinks?: boolean | null, socialLogins?: string | null, phoneNumberAuth?: string | null, anonymousAuthentication?: boolean | null, multiFactorAuthentication?: boolean | null, userInterfaceProvided?: boolean | null, customDomain?: boolean | null, noBrandWatermark?: boolean | null } | null } | null } | null> | null } };

export type DeploymentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type DeploymentQuery = { __typename?: 'Query', deployment: { __typename?: 'Deployment', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'DeploymentAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DeploymentGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'DeploymentComparisonInfo', siteLimit?: string | null, freeBandwidth?: string | null, additionalBandwidthCost?: string | null, freeBuildMinutes?: string | null, concurrentBuilds?: string | null, deploymentPreview?: boolean | null, serverlessFunctionExecution?: string | null, serverlessFunctionInvocations?: string | null, serverlessFunctionExecutionTimeout?: string | null, edgeFunctionExecution?: string | null, globalCdn?: boolean | null, customHeaders?: boolean | null, https?: boolean | null, ddosProtection?: boolean | null } | null } };

export type DeploymentConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DeploymentFilter>;
}>;


export type DeploymentConnectionQuery = { __typename?: 'Query', deploymentConnection: { __typename?: 'DeploymentConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DeploymentConnectionEdges', cursor: string, node?: { __typename?: 'Deployment', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'DeploymentAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DeploymentGithubInfo', githubLink?: string | null, githubStars?: string | null } | null, comparisonInfo?: { __typename: 'DeploymentComparisonInfo', siteLimit?: string | null, freeBandwidth?: string | null, additionalBandwidthCost?: string | null, freeBuildMinutes?: string | null, concurrentBuilds?: string | null, deploymentPreview?: boolean | null, serverlessFunctionExecution?: string | null, serverlessFunctionInvocations?: string | null, serverlessFunctionExecutionTimeout?: string | null, edgeFunctionExecution?: string | null, globalCdn?: boolean | null, customHeaders?: boolean | null, https?: boolean | null, ddosProtection?: boolean | null } | null } | null } | null> | null } };

export type DatabasesQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type DatabasesQuery = { __typename?: 'Query', databases: { __typename?: 'Databases', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'DatabasesAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DatabasesGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type DatabasesConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DatabasesFilter>;
}>;


export type DatabasesConnectionQuery = { __typename?: 'Query', databasesConnection: { __typename?: 'DatabasesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DatabasesConnectionEdges', cursor: string, node?: { __typename?: 'Databases', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'DatabasesAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'DatabasesGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export type BaasQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type BaasQuery = { __typename?: 'Query', baas: { __typename?: 'Baas', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'BaasAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'BaasGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type BaasConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<BaasFilter>;
}>;


export type BaasConnectionQuery = { __typename?: 'Query', baasConnection: { __typename?: 'BaasConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'BaasConnectionEdges', cursor: string, node?: { __typename?: 'Baas', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'BaasAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'BaasGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export type CloudProvidersQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type CloudProvidersQuery = { __typename?: 'Query', cloudProviders: { __typename?: 'CloudProviders', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'CloudProvidersAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'CloudProvidersGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type CloudProvidersConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<CloudProvidersFilter>;
}>;


export type CloudProvidersConnectionQuery = { __typename?: 'Query', cloudProvidersConnection: { __typename?: 'CloudProvidersConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'CloudProvidersConnectionEdges', cursor: string, node?: { __typename?: 'CloudProviders', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'CloudProvidersAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'CloudProvidersGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export type FrameworksQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type FrameworksQuery = { __typename?: 'Query', frameworks: { __typename?: 'Frameworks', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'FrameworksAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'FrameworksGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type FrameworksConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<FrameworksFilter>;
}>;


export type FrameworksConnectionQuery = { __typename?: 'Query', frameworksConnection: { __typename?: 'FrameworksConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'FrameworksConnectionEdges', cursor: string, node?: { __typename?: 'Frameworks', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'FrameworksAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'FrameworksGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export type SecurityQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type SecurityQuery = { __typename?: 'Query', security: { __typename?: 'Security', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'SecurityAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'SecurityGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type SecurityConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<SecurityFilter>;
}>;


export type SecurityConnectionQuery = { __typename?: 'Query', securityConnection: { __typename?: 'SecurityConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SecurityConnectionEdges', cursor: string, node?: { __typename?: 'Security', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'SecurityAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'SecurityGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export type StorageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type StorageQuery = { __typename?: 'Query', storage: { __typename?: 'Storage', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'StorageAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'StorageGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } };

export type StorageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<StorageFilter>;
}>;


export type StorageConnectionQuery = { __typename?: 'Query', storageConnection: { __typename?: 'StorageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'StorageConnectionEdges', cursor: string, node?: { __typename?: 'Storage', id: string, title: string, description: string, descriptionOfFreePlan?: string | null, siteLink: string, pricingPage?: string | null, thumbnail: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, addOnThumbnail?: { __typename: 'StorageAddOnThumbnail', title?: string | null, image?: string | null } | null, githubInfo?: { __typename: 'StorageGithubInfo', githubLink?: string | null, githubStars?: string | null } | null } | null } | null> | null } };

export const AuthenticationPartsFragmentDoc = gql`
    fragment AuthenticationParts on Authentication {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
  comparisonInfo {
    __typename
    monthlyActiveUsers
    emailAndPasswordAuth
    magicLinks
    socialLogins
    phoneNumberAuth
    anonymousAuthentication
    multiFactorAuthentication
    userInterfaceProvided
    customDomain
    noBrandWatermark
  }
}
    `;
export const DeploymentPartsFragmentDoc = gql`
    fragment DeploymentParts on Deployment {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
  comparisonInfo {
    __typename
    siteLimit
    freeBandwidth
    additionalBandwidthCost
    freeBuildMinutes
    concurrentBuilds
    deploymentPreview
    serverlessFunctionExecution
    serverlessFunctionInvocations
    serverlessFunctionExecutionTimeout
    edgeFunctionExecution
    globalCdn
    customHeaders
    https
    ddosProtection
  }
}
    `;
export const DatabasesPartsFragmentDoc = gql`
    fragment DatabasesParts on Databases {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const BaasPartsFragmentDoc = gql`
    fragment BaasParts on Baas {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const CloudProvidersPartsFragmentDoc = gql`
    fragment CloudProvidersParts on CloudProviders {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const FrameworksPartsFragmentDoc = gql`
    fragment FrameworksParts on Frameworks {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const SecurityPartsFragmentDoc = gql`
    fragment SecurityParts on Security {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const StoragePartsFragmentDoc = gql`
    fragment StorageParts on Storage {
  title
  description
  descriptionOfFreePlan
  siteLink
  pricingPage
  thumbnail
  addOnThumbnail {
    __typename
    title
    image
  }
  githubInfo {
    __typename
    githubLink
    githubStars
  }
}
    `;
export const AuthenticationDocument = gql`
    query authentication($relativePath: String!) {
  authentication(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AuthenticationParts
  }
}
    ${AuthenticationPartsFragmentDoc}`;
export const AuthenticationConnectionDocument = gql`
    query authenticationConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AuthenticationFilter) {
  authenticationConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AuthenticationParts
      }
    }
  }
}
    ${AuthenticationPartsFragmentDoc}`;
export const DeploymentDocument = gql`
    query deployment($relativePath: String!) {
  deployment(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DeploymentParts
  }
}
    ${DeploymentPartsFragmentDoc}`;
export const DeploymentConnectionDocument = gql`
    query deploymentConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DeploymentFilter) {
  deploymentConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DeploymentParts
      }
    }
  }
}
    ${DeploymentPartsFragmentDoc}`;
export const DatabasesDocument = gql`
    query databases($relativePath: String!) {
  databases(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DatabasesParts
  }
}
    ${DatabasesPartsFragmentDoc}`;
export const DatabasesConnectionDocument = gql`
    query databasesConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DatabasesFilter) {
  databasesConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DatabasesParts
      }
    }
  }
}
    ${DatabasesPartsFragmentDoc}`;
export const BaasDocument = gql`
    query baas($relativePath: String!) {
  baas(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...BaasParts
  }
}
    ${BaasPartsFragmentDoc}`;
export const BaasConnectionDocument = gql`
    query baasConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: BaasFilter) {
  baasConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...BaasParts
      }
    }
  }
}
    ${BaasPartsFragmentDoc}`;
export const CloudProvidersDocument = gql`
    query cloudProviders($relativePath: String!) {
  cloudProviders(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...CloudProvidersParts
  }
}
    ${CloudProvidersPartsFragmentDoc}`;
export const CloudProvidersConnectionDocument = gql`
    query cloudProvidersConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: CloudProvidersFilter) {
  cloudProvidersConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...CloudProvidersParts
      }
    }
  }
}
    ${CloudProvidersPartsFragmentDoc}`;
export const FrameworksDocument = gql`
    query frameworks($relativePath: String!) {
  frameworks(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...FrameworksParts
  }
}
    ${FrameworksPartsFragmentDoc}`;
export const FrameworksConnectionDocument = gql`
    query frameworksConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: FrameworksFilter) {
  frameworksConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...FrameworksParts
      }
    }
  }
}
    ${FrameworksPartsFragmentDoc}`;
export const SecurityDocument = gql`
    query security($relativePath: String!) {
  security(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SecurityParts
  }
}
    ${SecurityPartsFragmentDoc}`;
export const SecurityConnectionDocument = gql`
    query securityConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SecurityFilter) {
  securityConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SecurityParts
      }
    }
  }
}
    ${SecurityPartsFragmentDoc}`;
export const StorageDocument = gql`
    query storage($relativePath: String!) {
  storage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...StorageParts
  }
}
    ${StoragePartsFragmentDoc}`;
export const StorageConnectionDocument = gql`
    query storageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: StorageFilter) {
  storageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...StorageParts
      }
    }
  }
}
    ${StoragePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      authentication(variables: AuthenticationQueryVariables, options?: C): Promise<{data: AuthenticationQuery, variables: AuthenticationQueryVariables, query: string}> {
        return requester<{data: AuthenticationQuery, variables: AuthenticationQueryVariables, query: string}, AuthenticationQueryVariables>(AuthenticationDocument, variables, options);
      },
    authenticationConnection(variables?: AuthenticationConnectionQueryVariables, options?: C): Promise<{data: AuthenticationConnectionQuery, variables: AuthenticationConnectionQueryVariables, query: string}> {
        return requester<{data: AuthenticationConnectionQuery, variables: AuthenticationConnectionQueryVariables, query: string}, AuthenticationConnectionQueryVariables>(AuthenticationConnectionDocument, variables, options);
      },
    deployment(variables: DeploymentQueryVariables, options?: C): Promise<{data: DeploymentQuery, variables: DeploymentQueryVariables, query: string}> {
        return requester<{data: DeploymentQuery, variables: DeploymentQueryVariables, query: string}, DeploymentQueryVariables>(DeploymentDocument, variables, options);
      },
    deploymentConnection(variables?: DeploymentConnectionQueryVariables, options?: C): Promise<{data: DeploymentConnectionQuery, variables: DeploymentConnectionQueryVariables, query: string}> {
        return requester<{data: DeploymentConnectionQuery, variables: DeploymentConnectionQueryVariables, query: string}, DeploymentConnectionQueryVariables>(DeploymentConnectionDocument, variables, options);
      },
    databases(variables: DatabasesQueryVariables, options?: C): Promise<{data: DatabasesQuery, variables: DatabasesQueryVariables, query: string}> {
        return requester<{data: DatabasesQuery, variables: DatabasesQueryVariables, query: string}, DatabasesQueryVariables>(DatabasesDocument, variables, options);
      },
    databasesConnection(variables?: DatabasesConnectionQueryVariables, options?: C): Promise<{data: DatabasesConnectionQuery, variables: DatabasesConnectionQueryVariables, query: string}> {
        return requester<{data: DatabasesConnectionQuery, variables: DatabasesConnectionQueryVariables, query: string}, DatabasesConnectionQueryVariables>(DatabasesConnectionDocument, variables, options);
      },
    baas(variables: BaasQueryVariables, options?: C): Promise<{data: BaasQuery, variables: BaasQueryVariables, query: string}> {
        return requester<{data: BaasQuery, variables: BaasQueryVariables, query: string}, BaasQueryVariables>(BaasDocument, variables, options);
      },
    baasConnection(variables?: BaasConnectionQueryVariables, options?: C): Promise<{data: BaasConnectionQuery, variables: BaasConnectionQueryVariables, query: string}> {
        return requester<{data: BaasConnectionQuery, variables: BaasConnectionQueryVariables, query: string}, BaasConnectionQueryVariables>(BaasConnectionDocument, variables, options);
      },
    cloudProviders(variables: CloudProvidersQueryVariables, options?: C): Promise<{data: CloudProvidersQuery, variables: CloudProvidersQueryVariables, query: string}> {
        return requester<{data: CloudProvidersQuery, variables: CloudProvidersQueryVariables, query: string}, CloudProvidersQueryVariables>(CloudProvidersDocument, variables, options);
      },
    cloudProvidersConnection(variables?: CloudProvidersConnectionQueryVariables, options?: C): Promise<{data: CloudProvidersConnectionQuery, variables: CloudProvidersConnectionQueryVariables, query: string}> {
        return requester<{data: CloudProvidersConnectionQuery, variables: CloudProvidersConnectionQueryVariables, query: string}, CloudProvidersConnectionQueryVariables>(CloudProvidersConnectionDocument, variables, options);
      },
    frameworks(variables: FrameworksQueryVariables, options?: C): Promise<{data: FrameworksQuery, variables: FrameworksQueryVariables, query: string}> {
        return requester<{data: FrameworksQuery, variables: FrameworksQueryVariables, query: string}, FrameworksQueryVariables>(FrameworksDocument, variables, options);
      },
    frameworksConnection(variables?: FrameworksConnectionQueryVariables, options?: C): Promise<{data: FrameworksConnectionQuery, variables: FrameworksConnectionQueryVariables, query: string}> {
        return requester<{data: FrameworksConnectionQuery, variables: FrameworksConnectionQueryVariables, query: string}, FrameworksConnectionQueryVariables>(FrameworksConnectionDocument, variables, options);
      },
    security(variables: SecurityQueryVariables, options?: C): Promise<{data: SecurityQuery, variables: SecurityQueryVariables, query: string}> {
        return requester<{data: SecurityQuery, variables: SecurityQueryVariables, query: string}, SecurityQueryVariables>(SecurityDocument, variables, options);
      },
    securityConnection(variables?: SecurityConnectionQueryVariables, options?: C): Promise<{data: SecurityConnectionQuery, variables: SecurityConnectionQueryVariables, query: string}> {
        return requester<{data: SecurityConnectionQuery, variables: SecurityConnectionQueryVariables, query: string}, SecurityConnectionQueryVariables>(SecurityConnectionDocument, variables, options);
      },
    storage(variables: StorageQueryVariables, options?: C): Promise<{data: StorageQuery, variables: StorageQueryVariables, query: string}> {
        return requester<{data: StorageQuery, variables: StorageQueryVariables, query: string}, StorageQueryVariables>(StorageDocument, variables, options);
      },
    storageConnection(variables?: StorageConnectionQueryVariables, options?: C): Promise<{data: StorageConnectionQuery, variables: StorageConnectionQueryVariables, query: string}> {
        return requester<{data: StorageConnectionQuery, variables: StorageConnectionQueryVariables, query: string}, StorageConnectionQueryVariables>(StorageConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  