# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  authentication(relativePath: String): Authentication!
  authenticationConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuthenticationFilter): AuthenticationConnection!
  webHosting(relativePath: String): WebHosting!
  webHostingConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: WebHostingFilter): WebHostingConnection!
  baas(relativePath: String): Baas!
  baasConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: BaasFilter): BaasConnection!
  cloudProviders(relativePath: String): CloudProviders!
  cloudProvidersConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: CloudProvidersFilter): CloudProvidersConnection!
  frameworks(relativePath: String): Frameworks!
  frameworksConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: FrameworksFilter): FrameworksConnection!
  paas(relativePath: String): Paas!
  paasConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PaasFilter): PaasConnection!
}

input DocumentFilter {
  authentication: AuthenticationFilter
  webHosting: WebHostingFilter
  baas: BaasFilter
  cloudProviders: CloudProvidersFilter
  frameworks: FrameworksFilter
  paas: PaasFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = Authentication | WebHosting | Baas | CloudProviders | Frameworks | Paas

type AuthenticationAddOnThumbnail {
  title: String
  image: String
}

type AuthenticationGithubInfo {
  githubLink: String
  githubStars: String
}

type AuthenticationAdditionalInfoInfoListItem {
  content: String
}

type AuthenticationAdditionalInfoInfoListWarning {
  content: String
}

union AuthenticationAdditionalInfo = AuthenticationAdditionalInfoInfoListItem | AuthenticationAdditionalInfoInfoListWarning

type AuthenticationComparisonInfo {
  monthlyActiveUsers: String!
  emailAndPasswordAuth: Boolean!
  magicLinks: Boolean!
  socialLogins: String!
  phoneNumberAuth: String!
  anonymousAuthentication: Boolean!
  multiFactorAuthentication: Boolean!
  userInterfaceProvided: Boolean!
  customDomain: Boolean!
  noBrandWatermark: Boolean!
}

type Authentication implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: AuthenticationAddOnThumbnail
  githubInfo: AuthenticationGithubInfo
  selfHost: Boolean
  additionalInfo: [AuthenticationAdditionalInfo]
  comparisonInfo: AuthenticationComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input AuthenticationAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input AuthenticationGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input AuthenticationAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input AuthenticationAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input AuthenticationAdditionalInfoFilter {
  infoListItem: AuthenticationAdditionalInfoInfoListItemFilter
  infoListWarning: AuthenticationAdditionalInfoInfoListWarningFilter
}

input AuthenticationComparisonInfoFilter {
  monthlyActiveUsers: StringFilter
  emailAndPasswordAuth: BooleanFilter
  magicLinks: BooleanFilter
  socialLogins: StringFilter
  phoneNumberAuth: StringFilter
  anonymousAuthentication: BooleanFilter
  multiFactorAuthentication: BooleanFilter
  userInterfaceProvided: BooleanFilter
  customDomain: BooleanFilter
  noBrandWatermark: BooleanFilter
}

input AuthenticationFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: AuthenticationAddOnThumbnailFilter
  githubInfo: AuthenticationGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: AuthenticationAdditionalInfoFilter
  comparisonInfo: AuthenticationComparisonInfoFilter
}

type AuthenticationConnectionEdges {
  cursor: String!
  node: Authentication
}

type AuthenticationConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuthenticationConnectionEdges]
}

type WebHostingAddOnThumbnail {
  title: String
  image: String
}

type WebHostingGithubInfo {
  githubLink: String
  githubStars: String
}

type WebHostingAdditionalInfoInfoListItem {
  content: String
}

type WebHostingAdditionalInfoInfoListWarning {
  content: String
}

union WebHostingAdditionalInfo = WebHostingAdditionalInfoInfoListItem | WebHostingAdditionalInfoInfoListWarning

type WebHostingComparisonInfo {
  siteLimit: String
  freeBandwidth: String
  additionalBandwidthCost: String
  freeBuildMinutes: String
  concurrentBuilds: String
  deploymentPreview: Boolean
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  edgeFunctionExecution: String
  globalCdn: Boolean
  customHeaders: Boolean
  https: Boolean
  ddosProtection: Boolean
}

type WebHosting implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: WebHostingAddOnThumbnail
  githubInfo: WebHostingGithubInfo
  selfHost: Boolean
  additionalInfo: [WebHostingAdditionalInfo]
  comparisonInfo: WebHostingComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input WebHostingAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input WebHostingGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input WebHostingAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input WebHostingAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input WebHostingAdditionalInfoFilter {
  infoListItem: WebHostingAdditionalInfoInfoListItemFilter
  infoListWarning: WebHostingAdditionalInfoInfoListWarningFilter
}

input WebHostingComparisonInfoFilter {
  siteLimit: StringFilter
  freeBandwidth: StringFilter
  additionalBandwidthCost: StringFilter
  freeBuildMinutes: StringFilter
  concurrentBuilds: StringFilter
  deploymentPreview: BooleanFilter
  serverlessFunctionExecution: StringFilter
  serverlessFunctionInvocations: StringFilter
  serverlessFunctionExecutionTimeout: StringFilter
  edgeFunctionExecution: StringFilter
  globalCdn: BooleanFilter
  customHeaders: BooleanFilter
  https: BooleanFilter
  ddosProtection: BooleanFilter
}

input WebHostingFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: WebHostingAddOnThumbnailFilter
  githubInfo: WebHostingGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: WebHostingAdditionalInfoFilter
  comparisonInfo: WebHostingComparisonInfoFilter
}

type WebHostingConnectionEdges {
  cursor: String!
  node: WebHosting
}

type WebHostingConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [WebHostingConnectionEdges]
}

type BaasAddOnThumbnail {
  title: String
  image: String
}

type BaasGithubInfo {
  githubLink: String
  githubStars: String
}

type BaasAdditionalInfoInfoListItem {
  content: String
}

type BaasAdditionalInfoInfoListWarning {
  content: String
}

union BaasAdditionalInfo = BaasAdditionalInfoInfoListItem | BaasAdditionalInfoInfoListWarning

type BaasComparisonInfoAuthentication {
  monthlyActiveUsers: String!
  emailAndPasswordAuth: Boolean!
  magicLinks: Boolean!
  socialLogins: String!
  phoneNumberAuth: String!
  anonymousAuthentication: Boolean!
  multiFactorAuthentication: Boolean!
  userInterfaceProvided: Boolean!
  customDomain: Boolean!
  noBrandWatermark: Boolean!
}

type BaasComparisonInfoDatabase {
  databaseType: String
  databaseSize: String
  databaseEgress: String
  realtimeDatabase: String
}

type BaasComparisonInfoServerlessFunction {
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  numberOfFunctions: String
}

type BaasComparisonInfoStorage {
  storageSize: String
  storageEgress: String
  maxFileUploadSize: String
}

type BaasComparisonInfo {
  authentication: BaasComparisonInfoAuthentication
  database: BaasComparisonInfoDatabase
  serverlessFunction: BaasComparisonInfoServerlessFunction
  storage: BaasComparisonInfoStorage
  pushNotification: Boolean
  graphqlApi: Boolean
}

type Baas implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: BaasAddOnThumbnail
  githubInfo: BaasGithubInfo
  selfHost: Boolean
  additionalInfo: [BaasAdditionalInfo]
  comparisonInfo: BaasComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BaasAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input BaasGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input BaasAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input BaasAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input BaasAdditionalInfoFilter {
  infoListItem: BaasAdditionalInfoInfoListItemFilter
  infoListWarning: BaasAdditionalInfoInfoListWarningFilter
}

input BaasComparisonInfoAuthenticationFilter {
  monthlyActiveUsers: StringFilter
  emailAndPasswordAuth: BooleanFilter
  magicLinks: BooleanFilter
  socialLogins: StringFilter
  phoneNumberAuth: StringFilter
  anonymousAuthentication: BooleanFilter
  multiFactorAuthentication: BooleanFilter
  userInterfaceProvided: BooleanFilter
  customDomain: BooleanFilter
  noBrandWatermark: BooleanFilter
}

input BaasComparisonInfoDatabaseFilter {
  databaseType: StringFilter
  databaseSize: StringFilter
  databaseEgress: StringFilter
  realtimeDatabase: StringFilter
}

input BaasComparisonInfoServerlessFunctionFilter {
  serverlessFunctionExecution: StringFilter
  serverlessFunctionInvocations: StringFilter
  serverlessFunctionExecutionTimeout: StringFilter
  numberOfFunctions: StringFilter
}

input BaasComparisonInfoStorageFilter {
  storageSize: StringFilter
  storageEgress: StringFilter
  maxFileUploadSize: StringFilter
}

input BaasComparisonInfoFilter {
  authentication: BaasComparisonInfoAuthenticationFilter
  database: BaasComparisonInfoDatabaseFilter
  serverlessFunction: BaasComparisonInfoServerlessFunctionFilter
  storage: BaasComparisonInfoStorageFilter
  pushNotification: BooleanFilter
  graphqlApi: BooleanFilter
}

input BaasFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: BaasAddOnThumbnailFilter
  githubInfo: BaasGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: BaasAdditionalInfoFilter
  comparisonInfo: BaasComparisonInfoFilter
}

type BaasConnectionEdges {
  cursor: String!
  node: Baas
}

type BaasConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [BaasConnectionEdges]
}

type CloudProvidersAddOnThumbnail {
  title: String
  image: String
}

type CloudProvidersGithubInfo {
  githubLink: String
  githubStars: String
}

type CloudProvidersAdditionalInfoInfoListItem {
  content: String
}

type CloudProvidersAdditionalInfoInfoListWarning {
  content: String
}

union CloudProvidersAdditionalInfo = CloudProvidersAdditionalInfoInfoListItem | CloudProvidersAdditionalInfoInfoListWarning

type CloudProvidersFeaturesInfoFeature {
  feature: String
  description: String
  duration: String
  limitations: String
}

union CloudProvidersFeaturesInfo = CloudProvidersFeaturesInfoFeature

type CloudProviders implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: CloudProvidersAddOnThumbnail
  githubInfo: CloudProvidersGithubInfo
  selfHost: Boolean
  additionalInfo: [CloudProvidersAdditionalInfo]
  featuresInfo: [CloudProvidersFeaturesInfo]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input CloudProvidersAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input CloudProvidersGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input CloudProvidersAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input CloudProvidersAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input CloudProvidersAdditionalInfoFilter {
  infoListItem: CloudProvidersAdditionalInfoInfoListItemFilter
  infoListWarning: CloudProvidersAdditionalInfoInfoListWarningFilter
}

input CloudProvidersFeaturesInfoFeatureFilter {
  feature: StringFilter
  description: StringFilter
  duration: StringFilter
  limitations: StringFilter
}

input CloudProvidersFeaturesInfoFilter {
  feature: CloudProvidersFeaturesInfoFeatureFilter
}

input CloudProvidersFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: CloudProvidersAddOnThumbnailFilter
  githubInfo: CloudProvidersGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: CloudProvidersAdditionalInfoFilter
  featuresInfo: CloudProvidersFeaturesInfoFilter
}

type CloudProvidersConnectionEdges {
  cursor: String!
  node: CloudProviders
}

type CloudProvidersConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [CloudProvidersConnectionEdges]
}

type FrameworksAddOnThumbnail {
  title: String
  image: String
}

type FrameworksGithubInfo {
  githubLink: String
  githubStars: String
}

type FrameworksAdditionalInfoInfoListItem {
  content: String
}

type FrameworksAdditionalInfoInfoListWarning {
  content: String
}

union FrameworksAdditionalInfo = FrameworksAdditionalInfoInfoListItem | FrameworksAdditionalInfoInfoListWarning

type Frameworks implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: FrameworksAddOnThumbnail
  githubInfo: FrameworksGithubInfo
  selfHost: Boolean
  additionalInfo: [FrameworksAdditionalInfo]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input FrameworksAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input FrameworksGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input FrameworksAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input FrameworksAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input FrameworksAdditionalInfoFilter {
  infoListItem: FrameworksAdditionalInfoInfoListItemFilter
  infoListWarning: FrameworksAdditionalInfoInfoListWarningFilter
}

input FrameworksFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: FrameworksAddOnThumbnailFilter
  githubInfo: FrameworksGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: FrameworksAdditionalInfoFilter
}

type FrameworksConnectionEdges {
  cursor: String!
  node: Frameworks
}

type FrameworksConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [FrameworksConnectionEdges]
}

type PaasAddOnThumbnail {
  title: String
  image: String
}

type PaasGithubInfo {
  githubLink: String
  githubStars: String
}

type PaasAdditionalInfoInfoListItem {
  content: String
}

type PaasAdditionalInfoInfoListWarning {
  content: String
}

union PaasAdditionalInfo = PaasAdditionalInfoInfoListItem | PaasAdditionalInfoInfoListWarning

type PaasComparisonInfo {
  hourlyLimit: String
  appLimit: String
  databaseLimit: String
  requestLimit: String
  freeBandwidth: String
  cpu: String
  ram: String
  supportedLanguage: String
  supportedDatabase: String
  persistentStorage: String
  https: Boolean
  edgeDeployment: Boolean
  deployFromAnyGithubRepo: Boolean
  customDomain: Boolean
  sleeps: String
}

type Paas implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: PaasAddOnThumbnail
  githubInfo: PaasGithubInfo
  selfHost: Boolean
  additionalInfo: [PaasAdditionalInfo]
  comparisonInfo: PaasComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PaasAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input PaasGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input PaasAdditionalInfoInfoListItemFilter {
  content: StringFilter
}

input PaasAdditionalInfoInfoListWarningFilter {
  content: StringFilter
}

input PaasAdditionalInfoFilter {
  infoListItem: PaasAdditionalInfoInfoListItemFilter
  infoListWarning: PaasAdditionalInfoInfoListWarningFilter
}

input PaasComparisonInfoFilter {
  hourlyLimit: StringFilter
  appLimit: StringFilter
  databaseLimit: StringFilter
  requestLimit: StringFilter
  freeBandwidth: StringFilter
  cpu: StringFilter
  ram: StringFilter
  supportedLanguage: StringFilter
  supportedDatabase: StringFilter
  persistentStorage: StringFilter
  https: BooleanFilter
  edgeDeployment: BooleanFilter
  deployFromAnyGithubRepo: BooleanFilter
  customDomain: BooleanFilter
  sleeps: StringFilter
}

input PaasFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: PaasAddOnThumbnailFilter
  githubInfo: PaasGithubInfoFilter
  selfHost: BooleanFilter
  additionalInfo: PaasAdditionalInfoFilter
  comparisonInfo: PaasComparisonInfoFilter
}

type PaasConnectionEdges {
  cursor: String!
  node: Paas
}

type PaasConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PaasConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  createAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  updateWebHosting(relativePath: String!, params: WebHostingMutation!): WebHosting!
  createWebHosting(relativePath: String!, params: WebHostingMutation!): WebHosting!
  updateBaas(relativePath: String!, params: BaasMutation!): Baas!
  createBaas(relativePath: String!, params: BaasMutation!): Baas!
  updateCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  createCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  updateFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  createFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  updatePaas(relativePath: String!, params: PaasMutation!): Paas!
  createPaas(relativePath: String!, params: PaasMutation!): Paas!
}

input DocumentUpdateMutation {
  authentication: AuthenticationMutation
  webHosting: WebHostingMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  paas: PaasMutation
  relativePath: String
}

input DocumentMutation {
  authentication: AuthenticationMutation
  webHosting: WebHostingMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  paas: PaasMutation
}

input AuthenticationAddOnThumbnailMutation {
  title: String
  image: String
}

input AuthenticationGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input AuthenticationAdditionalInfoInfoListItemMutation {
  content: String
}

input AuthenticationAdditionalInfoInfoListWarningMutation {
  content: String
}

input AuthenticationAdditionalInfoMutation {
  infoListItem: AuthenticationAdditionalInfoInfoListItemMutation
  infoListWarning: AuthenticationAdditionalInfoInfoListWarningMutation
}

input AuthenticationComparisonInfoMutation {
  monthlyActiveUsers: String
  emailAndPasswordAuth: Boolean
  magicLinks: Boolean
  socialLogins: String
  phoneNumberAuth: String
  anonymousAuthentication: Boolean
  multiFactorAuthentication: Boolean
  userInterfaceProvided: Boolean
  customDomain: Boolean
  noBrandWatermark: Boolean
}

input AuthenticationMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: AuthenticationAddOnThumbnailMutation
  githubInfo: AuthenticationGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [AuthenticationAdditionalInfoMutation]
  comparisonInfo: AuthenticationComparisonInfoMutation
}

input WebHostingAddOnThumbnailMutation {
  title: String
  image: String
}

input WebHostingGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input WebHostingAdditionalInfoInfoListItemMutation {
  content: String
}

input WebHostingAdditionalInfoInfoListWarningMutation {
  content: String
}

input WebHostingAdditionalInfoMutation {
  infoListItem: WebHostingAdditionalInfoInfoListItemMutation
  infoListWarning: WebHostingAdditionalInfoInfoListWarningMutation
}

input WebHostingComparisonInfoMutation {
  siteLimit: String
  freeBandwidth: String
  additionalBandwidthCost: String
  freeBuildMinutes: String
  concurrentBuilds: String
  deploymentPreview: Boolean
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  edgeFunctionExecution: String
  globalCdn: Boolean
  customHeaders: Boolean
  https: Boolean
  ddosProtection: Boolean
}

input WebHostingMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: WebHostingAddOnThumbnailMutation
  githubInfo: WebHostingGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [WebHostingAdditionalInfoMutation]
  comparisonInfo: WebHostingComparisonInfoMutation
}

input BaasAddOnThumbnailMutation {
  title: String
  image: String
}

input BaasGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input BaasAdditionalInfoInfoListItemMutation {
  content: String
}

input BaasAdditionalInfoInfoListWarningMutation {
  content: String
}

input BaasAdditionalInfoMutation {
  infoListItem: BaasAdditionalInfoInfoListItemMutation
  infoListWarning: BaasAdditionalInfoInfoListWarningMutation
}

input BaasComparisonInfoAuthenticationMutation {
  monthlyActiveUsers: String
  emailAndPasswordAuth: Boolean
  magicLinks: Boolean
  socialLogins: String
  phoneNumberAuth: String
  anonymousAuthentication: Boolean
  multiFactorAuthentication: Boolean
  userInterfaceProvided: Boolean
  customDomain: Boolean
  noBrandWatermark: Boolean
}

input BaasComparisonInfoDatabaseMutation {
  databaseType: String
  databaseSize: String
  databaseEgress: String
  realtimeDatabase: String
}

input BaasComparisonInfoServerlessFunctionMutation {
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  numberOfFunctions: String
}

input BaasComparisonInfoStorageMutation {
  storageSize: String
  storageEgress: String
  maxFileUploadSize: String
}

input BaasComparisonInfoMutation {
  authentication: BaasComparisonInfoAuthenticationMutation
  database: BaasComparisonInfoDatabaseMutation
  serverlessFunction: BaasComparisonInfoServerlessFunctionMutation
  storage: BaasComparisonInfoStorageMutation
  pushNotification: Boolean
  graphqlApi: Boolean
}

input BaasMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: BaasAddOnThumbnailMutation
  githubInfo: BaasGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [BaasAdditionalInfoMutation]
  comparisonInfo: BaasComparisonInfoMutation
}

input CloudProvidersAddOnThumbnailMutation {
  title: String
  image: String
}

input CloudProvidersGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input CloudProvidersAdditionalInfoInfoListItemMutation {
  content: String
}

input CloudProvidersAdditionalInfoInfoListWarningMutation {
  content: String
}

input CloudProvidersAdditionalInfoMutation {
  infoListItem: CloudProvidersAdditionalInfoInfoListItemMutation
  infoListWarning: CloudProvidersAdditionalInfoInfoListWarningMutation
}

input CloudProvidersFeaturesInfoFeatureMutation {
  feature: String
  description: String
  duration: String
  limitations: String
}

input CloudProvidersFeaturesInfoMutation {
  feature: CloudProvidersFeaturesInfoFeatureMutation
}

input CloudProvidersMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: CloudProvidersAddOnThumbnailMutation
  githubInfo: CloudProvidersGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [CloudProvidersAdditionalInfoMutation]
  featuresInfo: [CloudProvidersFeaturesInfoMutation]
}

input FrameworksAddOnThumbnailMutation {
  title: String
  image: String
}

input FrameworksGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input FrameworksAdditionalInfoInfoListItemMutation {
  content: String
}

input FrameworksAdditionalInfoInfoListWarningMutation {
  content: String
}

input FrameworksAdditionalInfoMutation {
  infoListItem: FrameworksAdditionalInfoInfoListItemMutation
  infoListWarning: FrameworksAdditionalInfoInfoListWarningMutation
}

input FrameworksMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: FrameworksAddOnThumbnailMutation
  githubInfo: FrameworksGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [FrameworksAdditionalInfoMutation]
}

input PaasAddOnThumbnailMutation {
  title: String
  image: String
}

input PaasGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input PaasAdditionalInfoInfoListItemMutation {
  content: String
}

input PaasAdditionalInfoInfoListWarningMutation {
  content: String
}

input PaasAdditionalInfoMutation {
  infoListItem: PaasAdditionalInfoInfoListItemMutation
  infoListWarning: PaasAdditionalInfoInfoListWarningMutation
}

input PaasComparisonInfoMutation {
  hourlyLimit: String
  appLimit: String
  databaseLimit: String
  requestLimit: String
  freeBandwidth: String
  cpu: String
  ram: String
  supportedLanguage: String
  supportedDatabase: String
  persistentStorage: String
  https: Boolean
  edgeDeployment: Boolean
  deployFromAnyGithubRepo: Boolean
  customDomain: Boolean
  sleeps: String
}

input PaasMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: PaasAddOnThumbnailMutation
  githubInfo: PaasGithubInfoMutation
  selfHost: Boolean
  additionalInfo: [PaasAdditionalInfoMutation]
  comparisonInfo: PaasComparisonInfoMutation
}

schema {
  query: Query
  mutation: Mutation
}
