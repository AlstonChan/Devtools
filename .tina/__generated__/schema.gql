# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  authentication(relativePath: String): Authentication!
  authenticationConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuthenticationFilter): AuthenticationConnection!
  webHosting(relativePath: String): WebHosting!
  webHostingConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: WebHostingFilter): WebHostingConnection!
  databases(relativePath: String): Databases!
  databasesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: DatabasesFilter): DatabasesConnection!
  baas(relativePath: String): Baas!
  baasConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: BaasFilter): BaasConnection!
  cloudProviders(relativePath: String): CloudProviders!
  cloudProvidersConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: CloudProvidersFilter): CloudProvidersConnection!
  frameworks(relativePath: String): Frameworks!
  frameworksConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: FrameworksFilter): FrameworksConnection!
  security(relativePath: String): Security!
  securityConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: SecurityFilter): SecurityConnection!
  images(relativePath: String): Images!
  imagesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ImagesFilter): ImagesConnection!
  analytics(relativePath: String): Analytics!
  analyticsConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AnalyticsFilter): AnalyticsConnection!
}

input DocumentFilter {
  authentication: AuthenticationFilter
  webHosting: WebHostingFilter
  databases: DatabasesFilter
  baas: BaasFilter
  cloudProviders: CloudProvidersFilter
  frameworks: FrameworksFilter
  security: SecurityFilter
  images: ImagesFilter
  analytics: AnalyticsFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = Authentication | WebHosting | Databases | Baas | CloudProviders | Frameworks | Security | Images | Analytics

type AuthenticationAddOnThumbnail {
  title: String
  image: String
}

type AuthenticationGithubInfo {
  githubLink: String
  githubStars: String
}

type AuthenticationComparisonInfo {
  monthlyActiveUsers: String
  emailAndPasswordAuth: Boolean
  magicLinks: Boolean
  socialLogins: String
  phoneNumberAuth: String
  anonymousAuthentication: Boolean
  multiFactorAuthentication: Boolean
  userInterfaceProvided: Boolean
  customDomain: Boolean
  noBrandWatermark: Boolean
}

type Authentication implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: AuthenticationAddOnThumbnail
  githubInfo: AuthenticationGithubInfo
  comparisonInfo: AuthenticationComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input AuthenticationAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input AuthenticationGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input AuthenticationComparisonInfoFilter {
  monthlyActiveUsers: StringFilter
  emailAndPasswordAuth: BooleanFilter
  magicLinks: BooleanFilter
  socialLogins: StringFilter
  phoneNumberAuth: StringFilter
  anonymousAuthentication: BooleanFilter
  multiFactorAuthentication: BooleanFilter
  userInterfaceProvided: BooleanFilter
  customDomain: BooleanFilter
  noBrandWatermark: BooleanFilter
}

input AuthenticationFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: AuthenticationAddOnThumbnailFilter
  githubInfo: AuthenticationGithubInfoFilter
  comparisonInfo: AuthenticationComparisonInfoFilter
}

type AuthenticationConnectionEdges {
  cursor: String!
  node: Authentication
}

type AuthenticationConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuthenticationConnectionEdges]
}

type WebHostingAddOnThumbnail {
  title: String
  image: String
}

type WebHostingGithubInfo {
  githubLink: String
  githubStars: String
}

type WebHostingComparisonInfo {
  siteLimit: String
  freeBandwidth: String
  additionalBandwidthCost: String
  freeBuildMinutes: String
  concurrentBuilds: String
  deploymentPreview: Boolean
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  edgeFunctionExecution: String
  globalCdn: Boolean
  customHeaders: Boolean
  https: Boolean
  ddosProtection: Boolean
}

type WebHosting implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: WebHostingAddOnThumbnail
  githubInfo: WebHostingGithubInfo
  comparisonInfo: WebHostingComparisonInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input WebHostingAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input WebHostingGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input WebHostingComparisonInfoFilter {
  siteLimit: StringFilter
  freeBandwidth: StringFilter
  additionalBandwidthCost: StringFilter
  freeBuildMinutes: StringFilter
  concurrentBuilds: StringFilter
  deploymentPreview: BooleanFilter
  serverlessFunctionExecution: StringFilter
  serverlessFunctionInvocations: StringFilter
  serverlessFunctionExecutionTimeout: StringFilter
  edgeFunctionExecution: StringFilter
  globalCdn: BooleanFilter
  customHeaders: BooleanFilter
  https: BooleanFilter
  ddosProtection: BooleanFilter
}

input WebHostingFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: WebHostingAddOnThumbnailFilter
  githubInfo: WebHostingGithubInfoFilter
  comparisonInfo: WebHostingComparisonInfoFilter
}

type WebHostingConnectionEdges {
  cursor: String!
  node: WebHosting
}

type WebHostingConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [WebHostingConnectionEdges]
}

type DatabasesAddOnThumbnail {
  title: String
  image: String
}

type DatabasesGithubInfo {
  githubLink: String
  githubStars: String
}

type Databases implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: DatabasesAddOnThumbnail
  githubInfo: DatabasesGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input DatabasesAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input DatabasesGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input DatabasesFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: DatabasesAddOnThumbnailFilter
  githubInfo: DatabasesGithubInfoFilter
}

type DatabasesConnectionEdges {
  cursor: String!
  node: Databases
}

type DatabasesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DatabasesConnectionEdges]
}

type BaasAddOnThumbnail {
  title: String
  image: String
}

type BaasGithubInfo {
  githubLink: String
  githubStars: String
}

type Baas implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: BaasAddOnThumbnail
  githubInfo: BaasGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BaasAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input BaasGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input BaasFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: BaasAddOnThumbnailFilter
  githubInfo: BaasGithubInfoFilter
}

type BaasConnectionEdges {
  cursor: String!
  node: Baas
}

type BaasConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [BaasConnectionEdges]
}

type CloudProvidersAddOnThumbnail {
  title: String
  image: String
}

type CloudProvidersGithubInfo {
  githubLink: String
  githubStars: String
}

type CloudProviders implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: CloudProvidersAddOnThumbnail
  githubInfo: CloudProvidersGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input CloudProvidersAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input CloudProvidersGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input CloudProvidersFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: CloudProvidersAddOnThumbnailFilter
  githubInfo: CloudProvidersGithubInfoFilter
}

type CloudProvidersConnectionEdges {
  cursor: String!
  node: CloudProviders
}

type CloudProvidersConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [CloudProvidersConnectionEdges]
}

type FrameworksAddOnThumbnail {
  title: String
  image: String
}

type FrameworksGithubInfo {
  githubLink: String
  githubStars: String
}

type Frameworks implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: FrameworksAddOnThumbnail
  githubInfo: FrameworksGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input FrameworksAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input FrameworksGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input FrameworksFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: FrameworksAddOnThumbnailFilter
  githubInfo: FrameworksGithubInfoFilter
}

type FrameworksConnectionEdges {
  cursor: String!
  node: Frameworks
}

type FrameworksConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [FrameworksConnectionEdges]
}

type SecurityAddOnThumbnail {
  title: String
  image: String
}

type SecurityGithubInfo {
  githubLink: String
  githubStars: String
}

type Security implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: SecurityAddOnThumbnail
  githubInfo: SecurityGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input SecurityAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input SecurityGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input SecurityFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: SecurityAddOnThumbnailFilter
  githubInfo: SecurityGithubInfoFilter
}

type SecurityConnectionEdges {
  cursor: String!
  node: Security
}

type SecurityConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [SecurityConnectionEdges]
}

type ImagesAddOnThumbnail {
  title: String
  image: String
}

type ImagesGithubInfo {
  githubLink: String
  githubStars: String
}

type Images implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: ImagesAddOnThumbnail
  githubInfo: ImagesGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ImagesAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input ImagesGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input ImagesFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: ImagesAddOnThumbnailFilter
  githubInfo: ImagesGithubInfoFilter
}

type ImagesConnectionEdges {
  cursor: String!
  node: Images
}

type ImagesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ImagesConnectionEdges]
}

type AnalyticsAddOnThumbnail {
  title: String
  image: String
}

type AnalyticsGithubInfo {
  githubLink: String
  githubStars: String
}

type Analytics implements Node & Document {
  title: String!
  description: String!
  descriptionOfFreePlan: String
  siteLink: String!
  pricingPage: String
  thumbnail: String!
  addOnThumbnail: AnalyticsAddOnThumbnail
  githubInfo: AnalyticsGithubInfo
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AnalyticsAddOnThumbnailFilter {
  title: StringFilter
  image: ImageFilter
}

input AnalyticsGithubInfoFilter {
  githubLink: StringFilter
  githubStars: StringFilter
}

input AnalyticsFilter {
  title: StringFilter
  description: StringFilter
  descriptionOfFreePlan: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  thumbnail: ImageFilter
  addOnThumbnail: AnalyticsAddOnThumbnailFilter
  githubInfo: AnalyticsGithubInfoFilter
}

type AnalyticsConnectionEdges {
  cursor: String!
  node: Analytics
}

type AnalyticsConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AnalyticsConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  createAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  updateWebHosting(relativePath: String!, params: WebHostingMutation!): WebHosting!
  createWebHosting(relativePath: String!, params: WebHostingMutation!): WebHosting!
  updateDatabases(relativePath: String!, params: DatabasesMutation!): Databases!
  createDatabases(relativePath: String!, params: DatabasesMutation!): Databases!
  updateBaas(relativePath: String!, params: BaasMutation!): Baas!
  createBaas(relativePath: String!, params: BaasMutation!): Baas!
  updateCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  createCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  updateFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  createFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  updateSecurity(relativePath: String!, params: SecurityMutation!): Security!
  createSecurity(relativePath: String!, params: SecurityMutation!): Security!
  updateImages(relativePath: String!, params: ImagesMutation!): Images!
  createImages(relativePath: String!, params: ImagesMutation!): Images!
  updateAnalytics(relativePath: String!, params: AnalyticsMutation!): Analytics!
  createAnalytics(relativePath: String!, params: AnalyticsMutation!): Analytics!
}

input DocumentUpdateMutation {
  authentication: AuthenticationMutation
  webHosting: WebHostingMutation
  databases: DatabasesMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  security: SecurityMutation
  images: ImagesMutation
  analytics: AnalyticsMutation
  relativePath: String
}

input DocumentMutation {
  authentication: AuthenticationMutation
  webHosting: WebHostingMutation
  databases: DatabasesMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  security: SecurityMutation
  images: ImagesMutation
  analytics: AnalyticsMutation
}

input AuthenticationAddOnThumbnailMutation {
  title: String
  image: String
}

input AuthenticationGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input AuthenticationComparisonInfoMutation {
  monthlyActiveUsers: String
  emailAndPasswordAuth: Boolean
  magicLinks: Boolean
  socialLogins: String
  phoneNumberAuth: String
  anonymousAuthentication: Boolean
  multiFactorAuthentication: Boolean
  userInterfaceProvided: Boolean
  customDomain: Boolean
  noBrandWatermark: Boolean
}

input AuthenticationMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: AuthenticationAddOnThumbnailMutation
  githubInfo: AuthenticationGithubInfoMutation
  comparisonInfo: AuthenticationComparisonInfoMutation
}

input WebHostingAddOnThumbnailMutation {
  title: String
  image: String
}

input WebHostingGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input WebHostingComparisonInfoMutation {
  siteLimit: String
  freeBandwidth: String
  additionalBandwidthCost: String
  freeBuildMinutes: String
  concurrentBuilds: String
  deploymentPreview: Boolean
  serverlessFunctionExecution: String
  serverlessFunctionInvocations: String
  serverlessFunctionExecutionTimeout: String
  edgeFunctionExecution: String
  globalCdn: Boolean
  customHeaders: Boolean
  https: Boolean
  ddosProtection: Boolean
}

input WebHostingMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: WebHostingAddOnThumbnailMutation
  githubInfo: WebHostingGithubInfoMutation
  comparisonInfo: WebHostingComparisonInfoMutation
}

input DatabasesAddOnThumbnailMutation {
  title: String
  image: String
}

input DatabasesGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input DatabasesMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: DatabasesAddOnThumbnailMutation
  githubInfo: DatabasesGithubInfoMutation
}

input BaasAddOnThumbnailMutation {
  title: String
  image: String
}

input BaasGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input BaasMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: BaasAddOnThumbnailMutation
  githubInfo: BaasGithubInfoMutation
}

input CloudProvidersAddOnThumbnailMutation {
  title: String
  image: String
}

input CloudProvidersGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input CloudProvidersMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: CloudProvidersAddOnThumbnailMutation
  githubInfo: CloudProvidersGithubInfoMutation
}

input FrameworksAddOnThumbnailMutation {
  title: String
  image: String
}

input FrameworksGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input FrameworksMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: FrameworksAddOnThumbnailMutation
  githubInfo: FrameworksGithubInfoMutation
}

input SecurityAddOnThumbnailMutation {
  title: String
  image: String
}

input SecurityGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input SecurityMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: SecurityAddOnThumbnailMutation
  githubInfo: SecurityGithubInfoMutation
}

input ImagesAddOnThumbnailMutation {
  title: String
  image: String
}

input ImagesGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input ImagesMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: ImagesAddOnThumbnailMutation
  githubInfo: ImagesGithubInfoMutation
}

input AnalyticsAddOnThumbnailMutation {
  title: String
  image: String
}

input AnalyticsGithubInfoMutation {
  githubLink: String
  githubStars: String
}

input AnalyticsMutation {
  title: String
  description: String
  descriptionOfFreePlan: String
  siteLink: String
  pricingPage: String
  thumbnail: String
  addOnThumbnail: AnalyticsAddOnThumbnailMutation
  githubInfo: AnalyticsGithubInfoMutation
}

schema {
  query: Query
  mutation: Mutation
}
