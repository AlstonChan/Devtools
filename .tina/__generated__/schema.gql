# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  authentication(relativePath: String): Authentication!
  authenticationConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuthenticationFilter): AuthenticationConnection!
  deployment(relativePath: String): Deployment!
  deploymentConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: DeploymentFilter): DeploymentConnection!
  databases(relativePath: String): Databases!
  databasesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: DatabasesFilter): DatabasesConnection!
  baas(relativePath: String): Baas!
  baasConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: BaasFilter): BaasConnection!
  cloudProviders(relativePath: String): CloudProviders!
  cloudProvidersConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: CloudProvidersFilter): CloudProvidersConnection!
  frameworks(relativePath: String): Frameworks!
  frameworksConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: FrameworksFilter): FrameworksConnection!
  security(relativePath: String): Security!
  securityConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: SecurityFilter): SecurityConnection!
  storage(relativePath: String): Storage!
  storageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: StorageFilter): StorageConnection!
}

input DocumentFilter {
  authentication: AuthenticationFilter
  deployment: DeploymentFilter
  databases: DatabasesFilter
  baas: BaasFilter
  cloudProviders: CloudProvidersFilter
  frameworks: FrameworksFilter
  security: SecurityFilter
  storage: StorageFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = Authentication | Deployment | Databases | Baas | CloudProviders | Frameworks | Security | Storage

type Authentication implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input AuthenticationFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type AuthenticationConnectionEdges {
  cursor: String!
  node: Authentication
}

type AuthenticationConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuthenticationConnectionEdges]
}

type Deployment implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input DeploymentFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type DeploymentConnectionEdges {
  cursor: String!
  node: Deployment
}

type DeploymentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DeploymentConnectionEdges]
}

type Databases implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input DatabasesFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type DatabasesConnectionEdges {
  cursor: String!
  node: Databases
}

type DatabasesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DatabasesConnectionEdges]
}

type Baas implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BaasFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type BaasConnectionEdges {
  cursor: String!
  node: Baas
}

type BaasConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [BaasConnectionEdges]
}

type CloudProviders implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input CloudProvidersFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type CloudProvidersConnectionEdges {
  cursor: String!
  node: CloudProviders
}

type CloudProvidersConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [CloudProvidersConnectionEdges]
}

type Frameworks implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input FrameworksFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type FrameworksConnectionEdges {
  cursor: String!
  node: Frameworks
}

type FrameworksConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [FrameworksConnectionEdges]
}

type Security implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input SecurityFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type SecurityConnectionEdges {
  cursor: String!
  node: Security
}

type SecurityConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [SecurityConnectionEdges]
}

type Storage implements Node & Document {
  title: String!
  description: String!
  siteLink: String!
  pricingPage: String
  features: [String!]!
  thumbnail: String!
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StorageFilter {
  title: StringFilter
  description: StringFilter
  siteLink: StringFilter
  pricingPage: StringFilter
  features: StringFilter
  thumbnail: ImageFilter
}

type StorageConnectionEdges {
  cursor: String!
  node: Storage
}

type StorageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [StorageConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  createAuthentication(relativePath: String!, params: AuthenticationMutation!): Authentication!
  updateDeployment(relativePath: String!, params: DeploymentMutation!): Deployment!
  createDeployment(relativePath: String!, params: DeploymentMutation!): Deployment!
  updateDatabases(relativePath: String!, params: DatabasesMutation!): Databases!
  createDatabases(relativePath: String!, params: DatabasesMutation!): Databases!
  updateBaas(relativePath: String!, params: BaasMutation!): Baas!
  createBaas(relativePath: String!, params: BaasMutation!): Baas!
  updateCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  createCloudProviders(relativePath: String!, params: CloudProvidersMutation!): CloudProviders!
  updateFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  createFrameworks(relativePath: String!, params: FrameworksMutation!): Frameworks!
  updateSecurity(relativePath: String!, params: SecurityMutation!): Security!
  createSecurity(relativePath: String!, params: SecurityMutation!): Security!
  updateStorage(relativePath: String!, params: StorageMutation!): Storage!
  createStorage(relativePath: String!, params: StorageMutation!): Storage!
}

input DocumentUpdateMutation {
  authentication: AuthenticationMutation
  deployment: DeploymentMutation
  databases: DatabasesMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  security: SecurityMutation
  storage: StorageMutation
  relativePath: String
}

input DocumentMutation {
  authentication: AuthenticationMutation
  deployment: DeploymentMutation
  databases: DatabasesMutation
  baas: BaasMutation
  cloudProviders: CloudProvidersMutation
  frameworks: FrameworksMutation
  security: SecurityMutation
  storage: StorageMutation
}

input AuthenticationMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input DeploymentMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input DatabasesMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input BaasMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input CloudProvidersMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input FrameworksMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input SecurityMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

input StorageMutation {
  title: String
  description: String
  siteLink: String
  pricingPage: String
  features: [String]
  thumbnail: String
}

schema {
  query: Query
  mutation: Mutation
}
